kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src/github.com/justindfuller/purchase-plan

steps:
  - name: backend-test
    image: golang:1.16
    pull: if-not-exists
    environment:
      GOOGLE_CLOUD_PROJECT: purchase-plan-dev
      GOOGLE_APPLICATION_CREDENTIALS: /drone/service_account_credentials.json
      SERVICE_ACCOUNT_CREDENTIALS:
        from_secret: APP_ENGINE_CREDENTIALS_DEV
    commands:
      - ./operations/scripts/setup
      - cd ./backend
      - go test ./...

  - name: backend-lint
    image: golangci/golangci-lint
    pull: if-not-exists
    commands:
      - cd ./backend
      - golangci-lint run

  - name: backend-build
    image: nytimes/golang-gcloud-sdk:1.16.0
    pull: if-not-exists
    commands:
      - cd ./backend
      - make build-server

  - name: cron-build
    image: nytimes/golang-gcloud-sdk:1.16.0
    pull: if-not-exists
    commands:
      - cd ./backend
      - make build-cron

  - name: frontend-build
    image: node:15
    pull: if-not-exists
    commands:
      - cd purchase/frontend
      - npm ci
      - npm run build
      - mkdir -p ../backend/purchase/frontend/
      - cp -r ./build/ ../backend/purchase/frontend/

  #- name: build-mobile
  #  image: node:15
  #  pull: if-not-exists
  #  environment:
  #    EXPO_TOKEN:
  #      from_secret: EXPO_TOKEN
  #    EAS_NO_VCS: 1
  #  commands:
  #    - cd mobile
  #    - npm ci
  #    - npx eas-cli build --platform=all --profile=development --non-interactive

  - name: setup-terraform
    image: bash
    pull: if-not-exists
    environment:
      SERVICE_ACCOUNT_CREDENTIALS:
        from_secret: TERRAFORM_CREDENTIALS
    commands:
      - ./operations/scripts/setup
    depends_on:
      - backend-test
      - backend-lint
      - backend-build
      - cron-build
      - frontend-build

  - name: terraform-dev
    image: hashicorp/terraform:light
    pull: if-not-exists
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /drone/service_account_credentials.json
    commands:
      - cd terraform/dev
      - terraform init
      # - terraform apply -auto-approve
    when:
      event: push
      branch: main
    depends_on:
      - setup-terraform

  - name: deploy-dev
    image: nytimes/drone-gae
    pull: if-not-exists
    environment:
      GAE_CREDENTIALS:
        from_secret: DRONE_CREDENTIALS_DEV
    settings:
      action: deploy
      project: purchase-plan-dev
      dir: backend/cmd/server
      app_file: dev.yaml
      max_versions: 2
    when:
      event: push
      branch: main
    depends_on:
      - terraform-dev

  - name: deploy-cron-service-dev
    image: nytimes/drone-gae
    pull: if-not-exists
    environment:
      GAE_CREDENTIALS:
        from_secret: DRONE_CREDENTIALS_DEV
    settings:
      action: deploy
      project: purchase-plan-dev
      dir: backend/cmd/cron
      app_file: app.yaml
      max_versions: 2
    when:
      event: push
      branch: main
    depends_on:
      - terraform-dev

  - name: deploy-cron-dev
    image: nytimes/drone-gae
    pull: if-not-exists
    environment:
      GAE_CREDENTIALS:
        from_secret: DRONE_CREDENTIALS_DEV
    settings:
      action: deploy
      project: purchase-plan-dev
      dir: backend/cmd/cron
      cron_file: cron.yaml
      max_versions: 2
    when:
      event: push
      branch: main
    depends_on:
      - deploy-cron-service-dev

  - name: e2e-dev
    image: cypress/included:6.4.0
    pull: if-not-exists
    commands:
      - cd purchase/e2e
      - npm ci
      - npm test -- --config baseUrl=https://dev.purchaseplan.io
    when:
      environment:
        TEST_URL: https://dev.purchaseplan.io
      event: push
      branch: main
    depends_on:
      - deploy-dev
  
  - name: slack-dev
    image: plugins/slack
    pull: if-not-exists
    settings:
      webhook:
        from_secret: SLACK_WEBHOOK_URL
      channel: drone-alerts
      link_names: true
      template: >
        {{#success build.status}}
          build {{build.link}} (dev deploy) succeeded.
        {{else}}
          build {{build.link}} (dev deploy) failed.
        {{/success}}
    depends_on:
      - e2e-dev
      - deploy-cron-service-dev
    when:
      event: push
      branch: main
      status: [success, failure]

  - name: terraform-prd
    image: hashicorp/terraform:light
    pull: if-not-exists
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /drone/service_account_credentials.json
    commands:
      - cd terraform/prd
      - terraform init
      # - terraform apply -auto-approve
    when:
      event: tag
    depends_on:
      - setup-terraform

  - name: deploy-prd
    image: nytimes/drone-gae
    pull: if-not-exists
    environment:
      GAE_CREDENTIALS:
        from_secret: DRONE_CREDENTIALS_PRD
    settings:
      action: deploy
      project: purchase-plan-prd
      dir: backend/cmd/server
      app_file: prd.yaml
      max_versions: 2
    when:
      event: tag
    depends_on:
      - terraform-prd

  - name: deploy-cron-service-prd
    image: nytimes/drone-gae
    pull: if-not-exists
    environment:
      GAE_CREDENTIALS:
        from_secret: DRONE_CREDENTIALS_PRD
    settings:
      action: deploy
      project: purchase-plan-prd
      dir: backend/cmd/cron
      app_file: app.yaml
      max_versions: 2
    when:
      event: tag
    depends_on:
      - deploy-prd

  - name: deploy-cron-prd
    image: nytimes/drone-gae
    pull: if-not-exists
    environment:
      GAE_CREDENTIALS:
        from_secret: DRONE_CREDENTIALS_PRD
    settings:
      action: deploy
      project: purchase-plan-prd
      dir: backend/cmd/cron
      cron_file: cron.yaml
      max_versions: 2
    when:
      event: tag
    depends_on:
      - deploy-cron-service-prd

  - name: slack-prd
    image: plugins/slack
    pull: if-not-exists
    settings:
      webhook:
        from_secret: SLACK_WEBHOOK_URL
      channel: drone-alerts
      link_names: true
      template: >
        {{#success build.status}}
          @here build {{build.link}} (production deploy) succeeded.
        {{else}}
          @here build {{build.link}} (production deploy) failed.
        {{/success}}
    depends_on:
      - deploy-prd
      - deploy-cron-prd
    when:
      event: tag
      status: [success, failure]

